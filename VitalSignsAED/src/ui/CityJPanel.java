/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.CardLayout;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.City;
import model.Community;
import model.House;
import model.Patient;
import model.Person;
import model.System;

/**
 *
 * @author manojreddy
 */
public class CityJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CityJPanel
     */
    
    private JPanel displayJPanel;
    private System system;
    
    public CityJPanel(JPanel displayJpanel, System system) {
        this.displayJPanel=displayJpanel;
        this.system=system;
        initComponents();
        initializeCities();
    }

    public void initializeCities() {
        
        DefaultTableModel model = (DefaultTableModel) citiesjTable.getModel();
        model.setRowCount(0);
        if(system.getCities()!=null){
            for(City city:system.getCities()){
                Object[] row = new Object[4];
                row[0] = city;
                row[1] = formatDate(city.getCreatedDate());
                row[2] = formatDate(city.getLastUpdatedDate());
                row[3] = city.getCreatedBy();

                model.addRow(row);
            }
        }
    }
    
    private String formatDate(Date date){
       
        String pattern = "yyyy-MM-dd HH:mm:ss";
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);
        return simpleDateFormat.format(date);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        citiesjLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        citiesjTable = new javax.swing.JTable();
        backjButton = new javax.swing.JButton();
        gojButton = new javax.swing.JButton();
        deletejButton = new javax.swing.JButton();
        viewjButton = new javax.swing.JButton();
        addjButton = new javax.swing.JButton();

        citiesjLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        citiesjLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        citiesjLabel.setText("Displaying Cities");

        citiesjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "City Name", "Created On", "Updated On", "Created By"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(citiesjTable);

        backjButton.setText("< < Back");
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });

        gojButton.setText("Go");
        gojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gojButtonActionPerformed(evt);
            }
        });

        deletejButton.setText("Delete");
        deletejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletejButtonActionPerformed(evt);
            }
        });

        viewjButton.setText("View/Update");
        viewjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewjButtonActionPerformed(evt);
            }
        });

        addjButton.setText("Add");
        addjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addjButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(viewjButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deletejButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gojButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(19, 19, 19)
                            .addComponent(backjButton)
                            .addGap(79, 79, 79)
                            .addComponent(citiesjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(142, 142, 142)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(145, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(citiesjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backjButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gojButton)
                    .addComponent(deletejButton)
                    .addComponent(viewjButton)
                    .addComponent(addjButton))
                .addContainerGap(134, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
        // TODO add your handling code here:
        displayJPanel.remove(this);
        CardLayout cardLayout = (CardLayout) displayJPanel.getLayout();
        cardLayout.previous(displayJPanel);
    }//GEN-LAST:event_backjButtonActionPerformed

    private void deletejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletejButtonActionPerformed
        // TODO add your handling code here:
        
        int selectedCity = citiesjTable.getSelectedRow();
        if(selectedCity < 0) {
            JOptionPane.showMessageDialog(this,"Please select a City to delete");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) citiesjTable.getModel();
        City city = (City) model.getValueAt(selectedCity, 0);
        system.getCities().remove(city);
        system.setLastUpdatedDate(new Date());
        
        List<Person> persons = new ArrayList<>();
        List<Patient> patients  = new ArrayList<>();
        List<Community> communities = city.getCommunities();
        List<House> houses = new ArrayList<>();
        if(communities!=null){
            for(Community community:communities){
                houses.addAll(community.getHouses());
            }
        }
        
        for(House house:houses){
            persons.addAll(house.getPersons());
        }
        
        for(Person person:persons){
            patients.add(person.getPatient());
        }
        system.getPersonDirectory().getPersons().removeAll(persons);
        system.getPersonDirectory().setLastUpdatedDate(new Date());
        system.getPatientDirectory().getPatients().removeAll(patients);
        system.getPatientDirectory().setLastUpdatedDate(new Date());
        JOptionPane.showMessageDialog(this, "Successfully Deleted the City");
        initializeCities();
    }//GEN-LAST:event_deletejButtonActionPerformed

    private void gojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gojButtonActionPerformed
        // TODO add your handling code here:
        int selectedCity = citiesjTable.getSelectedRow();
        if(selectedCity < 0) {
            JOptionPane.showMessageDialog(this,"Please select a City to delete");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) citiesjTable.getModel();
        City city = (City) model.getValueAt(selectedCity, 0);
        
        communityJPanel communityJPanel = new communityJPanel(displayJPanel, system, city);
        displayJPanel.add("CommunityPanel", communityJPanel);
        CardLayout cardLayout = (CardLayout) displayJPanel.getLayout();
        cardLayout.next(displayJPanel);
    }//GEN-LAST:event_gojButtonActionPerformed

    private void viewjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewjButtonActionPerformed
        // TODO add your handling code here:
        int selectedCity = citiesjTable.getSelectedRow();
        if(selectedCity < 0) {
            JOptionPane.showMessageDialog(this,"Please select a City to delete");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) citiesjTable.getModel();
        City city = (City) model.getValueAt(selectedCity, 0);

        viewCityJPanel viCityJPanel = new viewCityJPanel(displayJPanel,system,city);
        displayJPanel.add("ViewCityPanel", viCityJPanel);
        CardLayout cardLayout = (CardLayout) displayJPanel.getLayout();
        cardLayout.next(displayJPanel);
    }//GEN-LAST:event_viewjButtonActionPerformed

    private void addjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addjButtonActionPerformed
        // TODO add your handling code here:
        AddCityJPanel addCityJPanel = new AddCityJPanel(displayJPanel,system);
        displayJPanel.add("AddCityPanel", addCityJPanel);
        CardLayout cardLayout = (CardLayout) displayJPanel.getLayout();
        cardLayout.next(displayJPanel);
        
    }//GEN-LAST:event_addjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addjButton;
    private javax.swing.JButton backjButton;
    private javax.swing.JLabel citiesjLabel;
    private javax.swing.JTable citiesjTable;
    private javax.swing.JButton deletejButton;
    private javax.swing.JButton gojButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton viewjButton;
    // End of variables declaration//GEN-END:variables
}
